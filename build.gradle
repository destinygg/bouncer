buildscript {
  ext.kotlin_version = '1.1.1'

  repositories {
    mavenCentral()
    jcenter()
    maven { url = "http://files.minecraftforge.net/maven" }
    maven { url = "https://oss.sonatype.org/content/repositories/snapshots/" }
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
  }
}

apply plugin: 'kotlin'
apply plugin: 'forge'

repositories {
  mavenCentral()
  maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
}

version = "1.7.10-0.2.0"
group= "gg.destiny.bouncer"
archivesBaseName = "bouncer"

compileJava {
  sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
  version = "1.7.10-10.13.4.1566-1.7.10"
  runDir = "run"
    
  // the mappings can be changed at any time, and must be in the following format.
  // snapshot_YYYYMMDD   snapshot are built nightly.
  // stable_#            stables are built at the discretion of the MCP team.
  // Use non-default mappings at your own risk. they may not allways work.
  // simply re-run your setup task after changing the mappings to update your workspace.
//  mappings = "snapshot_20161111"
  // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

sourceSets {
  main.kotlin.srcDirs += 'src/main/kotlin'
}

configurations {
  shade
  compile.extendsFrom shade
}

dependencies {
  shade "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  shade 'io.reactivex:rxjava:1.2.5'

  final retrofitVersion = '2.1.0'
  shade "com.squareup.retrofit2:retrofit:$retrofitVersion"
  shade "com.squareup.retrofit2:adapter-rxjava:$retrofitVersion"
  shade "com.squareup.retrofit2:converter-scalars:$retrofitVersion"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
  // Shading
  configurations.shade.each { dep ->
    from(project.zipTree(dep)) {
      exclude 'META-INF', 'META-INF/**'
    }
  }
}
